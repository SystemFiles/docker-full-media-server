## DISCLAIMER
# Using a combined configuration for both servers to allow both http and https
# Note: This is to solve issues with self-signed certificates that are not in a publicly trusted keystore. This causes issues with devices like Android TV where it is not always trivial to install trusted self-signed certificates.
# This would prevent users from accessing the server on these devices. Therefore, we do not force https

# Jellyfin Server Route
server {
    # HTTP
    listen 80;
    listen [::]:80;

    # HTTPS
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;

    server_name jelly.sykeshome.io;
    
    # Include SSL snippets (for HTTPS)
    include /snippets/self-signed.conf;
    include /snippets/ssl-params.conf;

    location / {
        proxy_pass http://jellyfin:8096;
    }
}

# OMBI Server Route
server {
    # HTTP
    listen 80;
    listen [::]:80;

    # HTTPS
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;

    server_name ombi.sykeshome.io;

    # Include SSL snippets (for HTTPS)
    include /snippets/self-signed.conf;
    include /snippets/ssl-params.conf;

    location / {
        proxy_pass http://ombi:3579;
    }
}

# Homer Server Route (Requires containerized version of homer running from [Docker Server Tools Repository](https://github.com/SystemFiles/docker-server-tools))
server {
    # HTTP
    listen 80;
    listen [::]:80;

    # HTTPS
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    root /var/www/html;
    index index.html index.htm index.nginx-debian.html;

    server_name sykeshome.io;

    # Include SSL snippets (for HTTPS)
    include /snippets/self-signed.conf;
    include /snippets/ssl-params.conf;

    location / {
        proxy_pass http://homer:8080;
    }
}