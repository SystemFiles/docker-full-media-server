version: "3.8"

# Include all required services configuration
# Ensure a few things are modified:
# 1. ENV vars
# 2. Volume mounts (for where you would like volumes mounted on your host)
# 3. Decide if you would like to mount /config on each service so you can keep a copy on your host of the config and make changes manually if necessary (outside of container)

services:
  # NOTE: Make sure that libraries are set to /tv and /movies in configuration
  jellyfin:
    image: linuxserver/jellyfin:10.10.7
    hostname: jellyfin
    container_name: jellyfin
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Toronto
      - PublishedServerUrl="https://jelly.media.sykesdev.ca"
      - UMASK=022 #optional
    volumes:
      - /cfgdata/jellyfin:/config # Jellyfin config / settings
      - /mnt/jellyfin/tv:/data/tvshows # TV Shows location
      - /mnt/jellyfin/movies:/data/movies # Movies location
    # devices:
    #   - /dev/dri:/dev/dri # Remove this if you do not want to use INTEL GPU for hardware excellerated transcoding
    networks:
      - docker-server-tools_server-tools
  jellyseerr:
    image: ghcr.io/fallenbagel/jellyseerr:2.5.2
    hostname: jellyseerr
    container_name: jellyseerr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Toronto
      - LOG_LEVEL=info
      - PORT=5055
    volumes:
      - /cfgdata/jellyseerr:/app/config
    networks:
      - docker-server-tools_server_tools
  # NOTE: Make sure to set download directory to /downloads
  deluge:
    image: linuxserver/deluge:version-2.1.1-r10
    hostname: deluge
    container_name: deluge
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Toronto
      - UMASK=022 # optional
      - DELUGE_LOGLEVEL=error # optional
    volumes:
      - /cfgdata/deluge:/config # Change path for volume mount
      - /mnt/jellyfin/downloads:/downloads # Change path for volume mount
    ports:
      - 127.0.0.1:8112:8112
    networks:
      - docker-server-tools_server-tools
  # NOTE: With Sonarr, when setting up downloader, make sure ip address is "deluge:8112"
  sonarr:
    image: linuxserver/sonarr:4.0.14
    hostname: sonarr
    container_name: sonarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Toronto
      - UMASK=022 # optional
    volumes:
      - /cfgdata/sonarr:/config # Change path for volume mount
      - /mnt/jellyfin/tv:/tv # Change path for volume mount
      - /mnt/jellyfin/downloads:/downloads # Change path for volume mount
    ports:
      - 127.0.0.1:8989:8989
    networks:
      - docker-server-tools_server-tools
  # NOTE: Similar to Sonarr, when setting up downloader make sure to enter "deluge:8112" for the host and port respectively
  radarr:
    image: linuxserver/radarr:5.21.1
    hostname: radarr
    container_name: radarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Toronto
      - UMASK=022 #optional
    volumes:
      - /cfgdata/radarr:/config # Change path for volume mount
      - /mnt/jellyfin/movies:/movies # Change path for volume mount
      - /mnt/jellyfin/downloads:/downloads # Change path for volume mount
    ports:
      - 127.0.0.1:7878:7878
    networks:
      - docker-server-tools_server-tools
  bazarr:
    image: linuxserver/bazarr:1.5.1
    hostname: bazarr
    container_name: bazarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Toronto
      - UMASK=022 #optional
    volumes:
      - /cfgdata/bazarr:/config
      - /mnt/jellyfin/movies:/movies #optional
      - /mnt/jellyfin/tv:/tv #optional
    ports:
      - 127.0.0.1:6767:6767
    networks:
      - docker-server-tools_server-tools
  prowlarr:
    image: linuxserver/prowlarr:1.33.3
    hostname: prowlarr
    container_name: prowlarr
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Toronto
    volumes:
      - /cfgdata/prowlarr:/config
    ports:
      - 127.0.0.1:9696:9696
    networks:
      - docker-server-tools_server-tools
  # CloudFlare Solver
  flaresolverr:
    image: flaresolverr/flaresolverr:v3.3.21
    hostname: flaresolverr
    container_name: flaresolverr
    restart: unless-stopped
    environment:
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - LOG_HTML=${LOG_HTML:-false}
      - CAPTCHA_SOLVER=${CAPTCHA_SOLVER:-none}
      - TZ=America/Toronto
    ports:
      - 127.0.0.1:8191:8191
    networks:
      - docker-server-tools_server-tools

networks:
  # Include the below if integrating with docker-full-media-server project (contains the nginx config)
  docker-server-tools_server-tools:
    external: true
